-- ðŸ““  Research GeoSpatial Functions Available in Snowflake
-- Navigate to docs.snowflake.com and search for "GeoSpatial Functions." You should see a list of functions. 


-- ðŸ¥‹ Re-Using Earlier Code (with a Small Addition)
--Remember this code? 
select 
'LINESTRING('||
listagg(coord_pair, ',') 
within group (order by point_id)
||')' as my_linestring
,st_length(my_linestring) as length_of_trail --this line is new! but it won't work!
from cherry_creek_trail
group by trail_name;

--The above query wont work since WKT Playground was nice enough to take our string (that looked like a GeoSpatial object) and convert it to a GeoSpatial Object and display it. But Snowflake will expect you to convert it yourself. That's easy! We can use the TO_GEOGRAPHY( ) function!


-- ðŸŽ¯ TO_GEOGRAPHY Challenge Lab!!
select 
'LINESTRING('||
listagg(coord_pair, ',') 
within group (order by point_id)
||')' as my_linestring,
TO_GEOGRAPHY(my_linestring) as my_linestring_to_geography
,st_length(TO_GEOGRAPHY(my_linestring)) as length_of_trail --this line is new! but it won't work!
from cherry_creek_trail
group by trail_name;



-- ðŸŽ¯ Calculate the Lengths for the Other Trails
select 
feature_name
, st_length(to_geography(geometry)) as trail_length
from MELS_SMOOTHIE_CHALLENGE_DB.TRAILS.DENVER_AREA_TRAILS


-- ðŸŽ¯ Change your DENVER_AREA_TRAILS view to include a Length Column!
select get_ddl('view', 'DENVER_AREA_TRAILS');

create or replace view DENVER_AREA_TRAILS(
	FEATURE_NAME,
	FEATURE_COORDINATES,
	GEOMETRY,
    TRAIL_LENGTH,
	FEATURE_PROPERTIES,
	SPECS,
	WHOLE_OBJECT
) as
select
$1:features[0]:properties:Name::string as feature_name
,$1:features[0]:geometry:coordinates::string as feature_coordinates
,$1:features[0]:geometry::string as geometry
, st_length(to_geography(geometry)) as trail_length
,$1:features[0]:properties::string as feature_properties
,$1:crs:properties:name::string as specs
,$1 as whole_object
from @trails_geojson (file_format => ff_json);


select * from DENVER_AREA_TRAILS;


-- ðŸ““  Bringing the Trails Together
-- ðŸ¥‹ Create a View on Cherry Creek Data to Mimic the Other Trail Data


--Create a view that will have similar columns to DENVER_AREA_TRAILS 
--Even though this data started out as Parquet, and we're joining it with geoJSON data
--So let's make it look like geoJSON instead.
create view DENVER_AREA_TRAILS_2 as
select 
trail_name as feature_name
,'{"coordinates":['||listagg('['||lng||','||lat||']',',')||'],"type":"LineString"}' as geometry
,st_length(to_geography(geometry)) as trail_length
from cherry_creek_trail
group by trail_name;



-- ðŸ¥‹ Use A Union All to Bring the Rows Into a Single Result Set

--Create a view that will have similar columns to DENVER_AREA_TRAILS 
select feature_name, geometry, trail_length
from DENVER_AREA_TRAILS
union all
select feature_name, geometry, trail_length
from DENVER_AREA_TRAILS_2;


-- ðŸ““  Now We've Got GeoSpatial LineStrings for All 5 Trails in the Same View
-- ðŸ¥‹ But Wait! There's More!

--Add more GeoSpatial Calculations to get more GeoSpecial Information! 
select feature_name
, to_geography(geometry) as my_linestring
, st_xmin(my_linestring) as min_eastwest
, st_xmax(my_linestring) as max_eastwest
, st_ymin(my_linestring) as min_northsouth
, st_ymax(my_linestring) as max_northsouth
, trail_length
from DENVER_AREA_TRAILS
union all
select feature_name
, to_geography(geometry) as my_linestring
, st_xmin(my_linestring) as min_eastwest
, st_xmax(my_linestring) as max_eastwest
, st_ymin(my_linestring) as min_northsouth
, st_ymax(my_linestring) as max_northsouth
, trail_length
from DENVER_AREA_TRAILS_2;


-- ðŸ¥‹ Make it a View
create view Trails_and_boundaries as
select feature_name
, to_geography(geometry) as my_linestring
, st_xmin(my_linestring) as min_eastwest
, st_xmax(my_linestring) as max_eastwest
, st_ymin(my_linestring) as min_northsouth
, st_ymax(my_linestring) as max_northsouth
, trail_length
from DENVER_AREA_TRAILS
union all
select feature_name
, to_geography(geometry) as my_linestring
, st_xmin(my_linestring) as min_eastwest
, st_xmax(my_linestring) as max_eastwest
, st_ymin(my_linestring) as min_northsouth
, st_ymax(my_linestring) as max_northsouth
, trail_length
from DENVER_AREA_TRAILS_2;


select * from Trails_and_boundaries;


-- ðŸ““  A Polygon Can be Used to Create a Bounding Box
select 
min(min_eastwest) as western_edge,
min(min_northsouth) as southern_edge,
max(min_eastwest) as eastern_edge,
max(min_northsouth) as northern_edge
from Trails_and_boundaries;


select 'POLYGON((' ||
min(min_eastwest)||' '||max(max_northsouth)||','||
max(max_northsouth)||' '||max(max_northsouth)||','||
max(max_eastwest)||' '||min(min_northsouth)||','||
min(min_northsouth)||' '||max(max_northsouth)||'))' as my_polygon
from Trails_and_boundaries;